rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // 認証済みユーザーのみアクセス可能
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // ユーザー自身のデータのみアクセス可能
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // businessCardsコレクション: 認証済みユーザーは自分のカードのみ操作可能
    match /businessCards/{cardId} {
      allow read: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || 
         resource.data.sharedWith.hasAny([request.auth.uid]));
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      allow update, delete: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
    }
    
    // scanned_cardsコレクション: 認証済みユーザーのみ
    match /scanned_cards/{scanId} {
      allow read, write: if isAuthenticated();
    }
    
    // ユーザープロファイル: 自分のデータのみ
    match /users/{userId} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId) && 
        request.resource.data.keys().hasAll(['email', 'createdAt']) &&
        request.resource.data.email is string;
    }
    
    // その他のコレクションはデフォルトで拒否
  }
}